syntax = "proto3";

package swim;

enum NodeState {
  Alive = 0;
  Pending = 1;
  Suspected = 2;
  Deceased = 3;
}

message Gossip {
  message NodeSuspected {
    string from = 1;
    string suspect = 2;
    uint64 suspect_incarnation_no = 3;
  }

  message NodeRecovered {
    string from = 1;
    string recovered = 2;
    uint64 recovered_incarnation_no = 3;
  }

  message NodeDeceased {
    string from = 1;
    string deceased = 2;
    uint64 deceased_incarnation_no = 3;
  }

  oneof event {
    NodeSuspected node_suspected = 1;
    NodeRecovered node_recovered = 2;
    NodeDeceased node_deceased = 3;
  }
}

message SwimMessage {
  message Ping {
    string from = 1;
    string requested_by = 2;
    Gossip gossip = 3;
  }

  message PingReq {
    string from = 1;
    string suspect = 2;
  }

  message Ack {
    string from = 1;
    string forward_to = 2;
    Gossip gossip = 3;
  }

  message JoinRequest {
    string from = 1;
  }

  message JoinResponse {
    map<string, NodeState> members = 1;
  }

  oneof action {
    Ping ping = 1;
    PingReq ping_req = 2;
    Ack ack = 3;
    JoinRequest join_request = 4;
    JoinResponse join_response = 5;
  }
}
